CURRENT V0 sprint
-----------------

BUGS

SPRINT ITEMS
* nicer backend

-- nicer controls
---- no glow

-- slimmer left menu

-- publishing
--- publish states; unpublished / published
--- publish actions; save / update (same thing but rendering is conditional)
--- publish/cancel button somewhere else

* pictures
** generate thumbnails from settings thumb sizes
** make file browser mini
** tagging from filename
* menu editor
* informative default pages


DO NEAR THE END
* refactor datastore to load all datastores the same way (no individual methods per datastore)
** save the same way too
* nginx
* combine css,js
* flot logo to base image into css, remove google fonts dependency



SECURITY
* check user is logged in when changing data (items)
* securer passwords
* make page with url flot_flot, or .htaccess, overwrite? maybe have some disallowed urls


LATER

* oncology editor
** elements should have a data type (text, html)
** elements should have an order
* spit out default stuff into header (charset)





V0 - MVP
--------

* apache support
* 30 second set up
* fully compressed content sent with caching headers
* URL agnostic; works on http://local:8080/ the same as http://www.website.com
* markdown editor with live preview
* images
* nicer editor
* menu designer (that's easy)
* nginx support


* seriously? check on item deletion
* toggle previews visibility

V1
--
* settings editor

* flexible taxonomies; add anything
** item edit form, should be generated from the oncology
** specify file type (in an oncology) like xml

* advanced item stuff
** url structure for item with default slug generation or overloading
** choose a parent for a page
** html edit as well as markdown
** published option for items

* starter themes (with aria roles, accesability in mind when designing)
** bootstrap
** purecss.io

* validate items in someway
** SEO
** social response http://www.sharedcount.com/
** preview to different sizes

* logical shortcuts (get all posts, paginated?)
** test by making rss

* auto updater

* plugin hook architecture

* cloud flare integration (purge file from cdn)

* error logging; php (generation)


V2
--
* add filters to images when embedding
* serve jpgP if browser supports it
* better picture management (plugins on upload hook auto tagging, face indexing, get exif atts)
* choice of editor (markup/down); with live preview
* native integration with flickr/facebook pics etc for embedding pics
* integration with vimeo (and similar?) as a video manager/embedder
* map integration (and add markers from other oncologies)
* revision history with easy reversion
* drag image upload, and also discovery mode (put images in pick up directory, cron discovery)
* make gif from jpegs: http://stackoverflow.com/questions/2191367/php-create-simple-animated-gif-from-two-jpeg-images



user stuff
----------
* multi author support
* users and groups
* notification of page changes; to user(s) or group(s)

advanced cms stuff
------------------
* subscriptions; posts, pages, categories, tags (powered by rss ?)
* open data format export of posts/pages/images
* easy back end management; list and tree view of pages/items
* easy AB testing for items
* ui widgets plugin (horizontal scroller, ...)
* plugin for making surverys
* scheduled posts
* shortcuts for everything in backend, with a mode where shortcuts are displayed over every button/link (like vimium)
* responsive elements in toolbox/wysiwyg editor
* form builder (with samples) (wysiwyg toolbar)
* wordpress import
* OPEN auth (as opposed to multisite)
* data mapper - can be rendered to show where content is used
* analytics (server and client side) (how to do server side if serving static files)
* social response over time


security
--------
* ban by ip
* spamproof?
* block repeat login attempts


nice to have later
------------------
* easy multilingual front end
* multilingual back end
* client side error loggin (plugin)
* preproccesor support? build css directly from sass/less docs
* API access (off by default, turning on allows for public private key controlled access to get set operations)
* win server support
* max server support